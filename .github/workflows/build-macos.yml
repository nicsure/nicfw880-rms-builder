name: Build macOS Universal Bundle

on:
  # Manual trigger with inputs
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      executable_name:
        description: 'Executable name (without extension)'
        required: true
        default: 'NicFW880_RMS'
      create_release:
        description: 'Create GitHub release'
        type: boolean
        default: true

  # Can also be triggered with push to main (optional)
  push:
    branches: [ main ]
    paths: [ 'to_release/**' ]

jobs:
  build-universal-dmg:
    runs-on: macos-latest

    steps:
    - name: 🔍 Checkout repository
      uses: actions/checkout@v4

    - name: 🛠️ Make scripts executable
      run: |
        chmod +x scripts/*.sh

    - name: 📥 Copy ZIP files from repository
      run: |
        echo "Copying ZIP files from to_release directory..."
        cp to_release/osx-arm64.zip .
        cp to_release/osx-x64.zip .
        echo "Verifying files:"
        ls -la osx-arm64.zip osx-x64.zip

    - name: 🔨 Create Universal Bundle
      run: |
        echo "Creating universal bundle..."
        ./scripts/create_universal_from_zips.sh \
          osx-arm64.zip \
          osx-x64.zip \
          "${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}"

        echo "Verifying bundle..."
        ls -la "${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}.app"

        echo "Checking architectures..."
        lipo -info "${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}.app/Contents/MacOS/${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}"

    - name: 💿 Create DMG
      run: |
        echo "Creating DMG..."
        ./scripts/create_dmg.sh \
          "${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}.app" \
          "${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}-${{ github.event.inputs.version || 'v1.0.0' }}"

        echo "Verifying DMG..."
        ls -la *.dmg

    - name: 📦 Create ZIP of Bundle (for artifact)
      run: |
        zip -r "${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}-${{ github.event.inputs.version || 'v1.0.0' }}-universal.zip" \
          "${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}.app"

    - name: 📤 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-universal-build
        path: |
          *.dmg
          *.zip
          !osx-arm64.zip
          !osx-x64.zip

    - name: 🚀 Create Release
      id: create_release
      if: ${{ github.event.inputs.create_release == 'true' }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version || 'v1.0.0' }}
        release_name: ${{ github.event.inputs.executable_name || 'NicFW880_RMS' }} ${{ github.event.inputs.version || 'v1.0.0' }}
        body: |
          ## ${{ github.event.inputs.executable_name || 'NicFW880_RMS' }} ${{ github.event.inputs.version || 'v1.0.0' }}

          Universal macOS application bundle (ARM64 + x86_64)

          ### Installation
          1. Download the `.dmg` file
          2. Open the DMG
          3. Drag the app to Applications folder

          ### Files
          - 📱 Universal DMG for easy installation
          - 📦 Universal ZIP bundle for advanced users

          Built automatically with GitHub Actions 🤖
        draft: false
        prerelease: false

    - name: 📎 Upload Release Assets
      if: ${{ github.event.inputs.create_release == 'true' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}-${{ github.event.inputs.version || 'v1.0.0' }}.dmg
        asset_name: ${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}-${{ github.event.inputs.version || 'v1.0.0' }}.dmg
        asset_content_type: application/x-apple-diskimage

    - name: 📎 Upload ZIP to Release
      if: ${{ github.event.inputs.create_release == 'true' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}-${{ github.event.inputs.version || 'v1.0.0' }}-universal.zip
        asset_name: ${{ github.event.inputs.executable_name || 'NicFW880_RMS' }}-${{ github.event.inputs.version || 'v1.0.0' }}-universal.zip
        asset_content_type: application/zip